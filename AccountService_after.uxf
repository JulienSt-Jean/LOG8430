<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>36</y>
      <w>570</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>AccountService
--
-TAG = AccountService.class.getSimpleName(): String
-VCARD_CHUNK_SIZE = 1000: int
--
/+AccountService(): ctor/
-getAccountByName(final String name): Account
+getNewAccountName(final String prefix): String
+addAccount(final Map map): Account
+getAccount(String accountId): Account
+sendProfile(final String callId, final String accountId): void
+guessAccount(Uri uri): Account
+getAccountDetails(final String accountId): Map&lt;String, String&gt;
+setAccountDetails(final String accountId, final Map map): void
+setAccountActive(final String accountId, final boolean active): void
+getVolatileAccountDetails(final String accountId): Map&lt;String, String&gt;
+getAccountTemplate(final String accountType): Map&lt;String, String&gt;
+removeAccount(final String accountId): void
+exportOnRing(final String accountId, final String password): String
+setActiveCodecList(final List codecs, final String accountId): void
+getCodecList(final String accountId): List&lt;Codec&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>972</x>
      <y>168</y>
      <w>324</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>*AccountsService*
--
-TAG = AccountsServices.class.getSimpleName(): String
~mApplicationExecutor: ExecutorService
-mAccountList: List&lt;Account&gt;
-mCallbackHandler: ConfigurationCallbackHandler
-mCurrentAccount: Account
-mHasSipAccount: boolean
-mHasRingAccount: boolean
--
+AccountsService(): ctor
+getCallbackHandler(): ConfigurationCallbackHandler
+hasSipAccount(): boolean
+hasRingAccount(): boolean
+loadAccountsFromDaemon(final boolean isConnected): void
-refreshAccountsCacheFromDaemon(): void
+getCurrentAccount(): Account
+setCurrentAccount(Account currentAccount): void
+getAccounts(): List&lt;Account&gt;
+getAccountList(): List&lt;String&gt;
+setAccountOrder(final List&lt;String&gt; accountOrder): void
+setAccountsActive(final boolean active): void
+setAccountsVideoEnabled(boolean isEnabled): void
+registerAllAccounts(): void
+backupAccounts(final List accountIds, final String toDir, final String password): int
+restoreAccounts(final String archivePath, final String password): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>366</y>
      <w>414</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>ContactService
--
-TAG = ContactService.class.getName(): String
~mPreferencesService: PreferencesService
~mApplicationExecutor: ExecutorService
-mContactList: Map&lt;Long, CallContact&gt;
-mContactsRing: Map&lt;String, CallContact&gt;
-mAccountId: String
--
+ContactService(): ctor
#loadContactsFromSystem(boolean loadRingContacts, boolean loadSipContacts): Map&lt;Long, CallContact&gt;
#findContactByIdFromSystem(Long contactId, String contactKey): CallContact
#findContactBySipNumberFromSystem(String number): CallContact
#findContactByNumberFromSystem(String number): CallContact
+loadContactData(CallContact callContact): void
+saveVCardContactData(CallContact contact): void
+loadVCardContactData(CallContact contact): void
+loadContacts(final boolean loadRingContacts, final boolean loadSipContacts, final Account account): void
+addContact(CallContact contact): void
+getContact(Uri uri): CallContact
+setRingContactName(String accountId, Uri uri, String name): boolean
-getContacts(): Collection&lt;CallContact&gt;
+getContactsNoBanned(): Collection&lt;CallContact&gt;
+getContactsDaemon(): Collection&lt;CallContact&gt;
*+addContact(final String accountId, final String uri): void*
*+removeContact(final String accountId, final String uri, final boolean ban): void*
*+getContacts(final String accountId): List&lt;Map&lt;String, String&gt;&gt;*
+findContactById(long id): CallContact
+findContactById(long id, String key): CallContact
+findContactByNumber(String number): CallContact
+findContact(Uri uri): CallContact
+findContact(long contactId, String contactKey, Uri contactNumber): CallContact
+getCredentials(final String accountId): List&lt;Map&lt;String, String&gt;&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>972</x>
      <y>42</y>
      <w>324</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*DeviceService*
--
-TAG = DeviceService.class.getSimpleName(): String
--
+DeviceService(): ctor
+getKnownRingDevices(final String accountId): Map&lt;String, String&gt;
+revokeDevice(final String accountId, final String password, final String deviceId): void
+renameDevice(final String accountId, final String newName): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>96</x>
      <y>270</y>
      <w>336</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>*BlockchainService*
--
-TAG = BlockchainService.class.getSimpleName(): String
--
+BlockchainService(): ctor
+registerName(final Account account, final String password, final String name): void
+registerName(final String account, final String password, final String name): void
+lookupName(final String account, final String nameserver, final String name): void
+lookupAddress(final String account, final String nameserver, final String address): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>642</x>
      <y>0</y>
      <w>216</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Observable
--
-mObservers: List&lt;WeakReference&lt;Observer&gt;&gt;
-mIsChanged: boolean
--
+addObserver(Observer observer): void
+setChanged(): void
+clearChanged(): void
+notifyObservers(): void
+notifyObservers(Object argument): void
+removeObserver(Observer observerToRemove): void
+hasChanged(): boolean
+countObservers(): int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>618</x>
      <y>156</y>
      <w>264</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>*DaemonInteractable*
--
-TAG = DaemonInteractable.class.getName(): String
~mExecutor: ExecutorService
~mDeviceRuntimeService: DeviceRuntimeService
--
executeByDaemon(boolean isSynchronous, Callable&lt;T&gt; callable) : T
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>744</x>
      <y>114</y>
      <w>18</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>564</x>
      <y>174</y>
      <w>66</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>876</x>
      <y>78</y>
      <w>108</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;180.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>876</x>
      <y>192</y>
      <w>108</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>534</x>
      <y>210</y>
      <w>240</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>380.0;10.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>426</x>
      <y>210</y>
      <w>276</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>440.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>426</y>
      <w>570</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>*SecurityService*
--
-TAG = SecurityService.class.getSimpleName(): String
--
+SecurityService(): ctor
+validateCertificatePath(final String accountID, final String certificatePath, final String privateKeyPath, final String privateKeyPass): Map&lt;String, String&gt;
+validateCertificate(final String accountId, final String certificate): Map&lt;String, String&gt;
+getCertificateDetailsPath(final String certificatePath): Map&lt;String, String&gt;
+getCertificateDetails(final String certificateRaw): Map&lt;String, String&gt;
+getTlsSupportedMethods(): List&lt;String&gt;
+getCredentials(final String accountId): List&lt;Map&lt;String, String&gt;&gt;
+setCredentials(final String accountId, final List creds): void
+getTrustRequests(final String accountId): List&lt;Map&lt;String, String&gt;&gt;
+acceptTrustRequest(final String accountId, final String from): Boolean
+discardTrustRequest(final String accountId, final String from): void
+sendTrustRequest(final String accountId, final String to, final Blob message): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>810</x>
      <y>210</y>
      <w>132</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;360.0</additional_attributes>
  </element>
</diagram>
